/*** @author admin*/(function(){	var	__StudyGroup	= model.StudyGroup 				= {},	__events		= __StudyGroup.events 			= {},	__entityMethods	= __StudyGroup.entityMethods	= {},	ERRORS			= __myNameSpace.ERRORS;		__entityMethods.isBusy = function(timeTable){		return ds.Utils.isBusy({			timeTable	: timeTable,			timeTables	: this.timeTables		});	}	__StudyGroup.nbr_teachers = {		onGet:function(){			return this.teachers.length;		}	}	__StudyGroup.nbr_students = {		onGet:function(){			return this.students.length;		}	}		__events.onRestrictingQuery = function(){		var		sessionRef		= currentSession(),		DirectoryROLES	= __myNameSpace.DirectoryROLES,		result			= this.createEntityCollection();				switch(true){			case sessionRef.belongsTo(DirectoryROLES.SUPERADMINISTRATOR)	:			case sessionRef.belongsTo(DirectoryROLES.ADMINISTRATOR)	:			case sessionRef.belongsTo(DirectoryROLES.RECORDOFFICER)	:				return this.all();			case sessionRef.belongsTo(DirectoryROLES.TEACHER)	:				if(ds.Teacher.first()){					return ds.Teacher.first().timeTables.studyGroup;				}				break;			case sessionRef.belongsTo(DirectoryROLES.STUDENT)	:				if(ds.Student.first()){					result.add(ds.Student.first().studyGroup);					return result;				}				break;			case sessionRef.belongsTo(DirectoryROLES.PARENT)	:				if(ds.Parent.first() && ds.Parent.first().children){					return ds.Parent.first().children.studyGroup;				}				break;		}				return result;	}		__events.onSave = function(){		ds.Log.push(__myNameSpace.LOG.getOperation(this , 'save'));	}		__events.onRemove = function(){		ds.Log.push(__myNameSpace.LOG.getOperation(this , 'remove'));	}})();