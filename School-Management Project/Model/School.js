/*** @author admin*/(function(){    var    __School		= model.School 				= {},    __entityMethods	= __School.entityMethods	= {},    __methods		= __School.methods			= {},    __events		= __School.events			= {};		__events.onRestrictingQuery = function(){		if(!this.length){			this.init();		}				var res = this.createEntityCollection();				res.add(this.first());				return res;	}		__methods.init = function(){		try{			if(this.length != 0){				this.remove();				ds.Agenda.remove();				ds.Academic_calendar.remove();			}						new this({				name			: __myNameSpace.School.NAME,				location		: __myNameSpace.School.LOCATION,				logo 			: loadImage(getFolder('path') + __myNameSpace.School.LOGO),				defaultMaintCost: __myNameSpace.School.DEFAULT_MAINT_COST			}).save();					var school = this.first();						if(!school.agenda){				var				allDays = ['mon' , 'tue' , 'wed' , 'thu' , 'fri' , 'sat' , 'sun'],				obj 	= {};								for(var i = 0 , d ; d = allDays[i] ; i++){					obj[d] = __myNameSpace.School.FREE_DAYS.indexOf(d) < 0;				}								obj.from 	= __myNameSpace.School.START;				obj.to 		= __myNameSpace.School.END;								var agenda = new ds.Agenda(obj);								agenda.save();				school.agenda = agenda;				school.save();			}						var			acs = [				{					year	: '2012-2013',					start	: new Date('09/12/2012'),					end 	: new Date('07/13/2013')				},				{					year 	: '2013-2014',					start	: new Date('09/08/2013'),					end 	: new Date('07/14/2014')				}			];						for(var i = 0 , ac ; ac = acs[i] ; i++){				ac.school = school;				new ds.Academic_calendar(ac).save();			}						return true;		}catch(e){			return false;		}	}		__methods.getSchedulerConfig = function(){		if(this.length == 0){			if(!this.init()){				return {					first_hour 	: 0,					last_hour	: 24,					workingDays	: [0,1,2,3,4,5,6]				}			}		}				var first = this.first();		var agenda= first.agenda;				if(agenda){			return {				first_hour 	: agenda.from_hours + (agenda.from_am?0:12) + agenda.from_minutes/60,				last_hour	: agenda.to_hours + (agenda.to_am?0:12) + agenda.to_minutes/60,				workingDays	: agenda.getWorkingDays()			}		}				return null;	}	__methods.getSchedulerConfig.scope = 'public';})();